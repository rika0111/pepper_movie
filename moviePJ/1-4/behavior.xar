<?xml version="1.0" encoding="UTF-8" ?>
<ChoregrapheProject xmlns="http://www.aldebaran-robotics.com/schema/choregraphe/project.xsd" xar_version="3">
    <Box name="root" id="-1" localization="8" tooltip="Root box of Choregraphe&apos;s behavior. Highest level possible." x="0" y="0">
        <bitmap>media/images/box/root.png</bitmap>
        <script language="4">
            <content>
                <![CDATA[]]>
</content>
        </script>
        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="ボックスBehaviorの終了時に信号を送る。" id="4" />
        <Timeline enable="0">
            <BehaviorLayer name="behavior_layer1">
                <BehaviorKeyframe name="keyframe1" index="1">
                    <Diagram>
                        <Box name="+_上向きガッツ" id="230" localization="8" tooltip="Enter tooltip here" x="561" y="172">
                            <bitmap>media/images/box/box-diagram.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="ボックス動作の終了時に信号を送る" id="4" />
                            <Timeline enable="1" fps="25" start_frame="1" end_frame="60" size="60">
                                <ActuatorList model="">
                                    <ActuatorCurve name="value" actuator="HeadPitch" recordable="0" mute="0" unit="0">
                                        <Key frame="19" value="-11.1" />
                                        <Key frame="24" value="8.5" />
                                        <Key frame="29" value="-11.1" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LElbowRoll" recordable="0" mute="0" unit="0">
                                        <Key frame="16" value="-77.4" />
                                        <Key frame="38" value="-77.4" />
                                        <Key frame="60" value="-84.5508" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LElbowYaw" recordable="0" mute="0" unit="0">
                                        <Key frame="16" value="-97.9969" />
                                        <Key frame="38" value="-97.9969" />
                                        <Key frame="60" value="-6.24024" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="0" mute="0" unit="0">
                                        <Key frame="18" value="69.4" />
                                        <Key frame="23" value="82.3" />
                                        <Key frame="28" value="69.4" />
                                        <Key frame="38" value="69.4" />
                                        <Key frame="60" value="81.3867" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="0" mute="0" unit="0">
                                        <Key frame="16" value="0.5" />
                                        <Key frame="38" value="0.5" />
                                        <Key frame="50" value="46" />
                                        <Key frame="60" value="51.9434" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LWristYaw" recordable="0" mute="0" unit="0">
                                        <Key frame="16" value="-25.3104" />
                                        <Key frame="38" value="-25.3104" />
                                        <Key frame="60" value="-87" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RElbowRoll" recordable="0" mute="0" unit="0">
                                        <Key frame="16" value="77.4" />
                                        <Key frame="38" value="77.4" />
                                        <Key frame="60" value="84.6387" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RElbowYaw" recordable="0" mute="0" unit="0">
                                        <Key frame="16" value="97.9969" />
                                        <Key frame="38" value="97.9969" />
                                        <Key frame="60" value="6.24024" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="0" mute="0" unit="0">
                                        <Key frame="18" value="69.4" />
                                        <Key frame="23" value="82.3" />
                                        <Key frame="28" value="69.4" />
                                        <Key frame="38" value="69.4" />
                                        <Key frame="60" value="81.6504" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="0" mute="0" unit="0">
                                        <Key frame="16" value="-0.5" />
                                        <Key frame="38" value="-0.5" />
                                        <Key frame="50" value="-46" />
                                        <Key frame="60" value="-51.9434" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RWristYaw" recordable="0" mute="0" unit="0">
                                        <Key frame="16" value="25.3104" />
                                        <Key frame="38" value="25.3104" />
                                        <Key frame="60" value="87" />
                                    </ActuatorCurve>
                                </ActuatorList>
                            </Timeline>
                        </Box>
                        <Box name="-_頭かきかき" id="18" localization="8" tooltip="Enter tooltip here" x="240" y="183">
                            <bitmap>media/images/box/box-diagram.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="ボックス動作の終了時に信号を送る" id="4" />
                            <Timeline enable="1" fps="25" start_frame="1" end_frame="107" size="107">
                                <ActuatorList model="">
                                    <ActuatorCurve name="value" actuator="HeadPitch" recordable="0" mute="0" unit="0">
                                        <Key frame="30" value="-11.4592" />
                                        <Key frame="37" value="5" />
                                        <Key frame="44" value="-11.4592" />
                                        <Key frame="51" value="5" />
                                        <Key frame="58" value="-11.4592" />
                                        <Key frame="65" value="5" />
                                        <Key frame="72" value="5" />
                                        <Key frame="107" value="-11.4592" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="HeadYaw" recordable="0" mute="0" unit="0">
                                        <Key frame="30" value="-4.70003e-21" />
                                        <Key frame="37" value="-4.70003e-21" />
                                        <Key frame="44" value="-4.70003e-21" />
                                        <Key frame="51" value="-4.70003e-21" />
                                        <Key frame="58" value="-4.70003e-21" />
                                        <Key frame="65" value="-4.70003e-21" />
                                        <Key frame="72" value="-4.70003e-21" />
                                        <Key frame="107" value="0" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RElbowRoll" recordable="0" mute="0" unit="0">
                                        <Key frame="13" value="72.4" />
                                        <Key frame="30" value="80" />
                                        <Key frame="37" value="89.5" />
                                        <Key frame="44" value="80" />
                                        <Key frame="51" value="89.5" />
                                        <Key frame="58" value="80" />
                                        <Key frame="65" value="89.5" />
                                        <Key frame="72" value="89.5" />
                                        <Key frame="92" value="77.4" />
                                        <Key frame="107" value="84.6388" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RElbowYaw" recordable="0" mute="0" unit="0">
                                        <Key frame="30" value="5.53478" />
                                        <Key frame="37" value="5.53478" />
                                        <Key frame="44" value="5.53478" />
                                        <Key frame="51" value="5.53478" />
                                        <Key frame="58" value="5.53478" />
                                        <Key frame="65" value="5.53478" />
                                        <Key frame="72" value="5.53478" />
                                        <Key frame="107" value="6.20701" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RHand" recordable="0" mute="0" unit="1">
                                        <Key frame="30" value="0.9" />
                                        <Key frame="37" value="0.1512" />
                                        <Key frame="44" value="0.9" />
                                        <Key frame="51" value="0.1512" />
                                        <Key frame="58" value="0.9" />
                                        <Key frame="65" value="0.1512" />
                                        <Key frame="72" value="0.1512" />
                                        <Key frame="107" value="0" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="0" mute="0" unit="0">
                                        <Key frame="30" value="-80.9" />
                                        <Key frame="37" value="-80.9" />
                                        <Key frame="44" value="-80.9" />
                                        <Key frame="51" value="-80.9" />
                                        <Key frame="58" value="-80.9" />
                                        <Key frame="65" value="-80.9" />
                                        <Key frame="72" value="-80.9" />
                                        <Key frame="107" value="81.2851" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="0" mute="0" unit="0">
                                        <Key frame="30" value="-47.0128" />
                                        <Key frame="37" value="-47.0128" />
                                        <Key frame="44" value="-47.0128" />
                                        <Key frame="51" value="-47.0128" />
                                        <Key frame="58" value="-47.0128" />
                                        <Key frame="65" value="-47.0128" />
                                        <Key frame="72" value="-47.0128" />
                                        <Key frame="107" value="-52" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RWristYaw" recordable="0" mute="0" unit="0">
                                        <Key frame="30" value="88.6804" />
                                        <Key frame="37" value="88.6804" />
                                        <Key frame="44" value="88.6804" />
                                        <Key frame="51" value="88.6804" />
                                        <Key frame="58" value="88.6804" />
                                        <Key frame="65" value="88.6804" />
                                        <Key frame="72" value="88.6804" />
                                        <Key frame="107" value="88.6804" />
                                    </ActuatorCurve>
                                </ActuatorList>
                            </Timeline>
                        </Box>
                        <Box name="_検索中" id="14" localization="8" tooltip="" x="232" y="33">
                            <bitmap>media/images/box/box-python-script.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #put initialization code here
        self.frameManager = None
        try:
            self.frameManager = ALProxy("ALFrameManager")
        except Exception as e:
            self.logger.error(e)

        pass

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self):
        #self.onStopped() #activate the output of the box
        tabletService = self.session().service("ALTabletService")
        url = self.getParameter("html")
        #self.logger.error("現在:"+url)
        url = self._getAbsoluteUrl(url)
        #self.logger.info("現在:"+url)
        tabletService.loadUrl(url)
        tabletService.showWebview()
        #self.onSuccess()
        self.onStopped()
        pass

    def _getAbsoluteUrl(self, partial_url):
        import os
        subPath = os.path.join(self._getAppName(), os.path.normpath(partial_url).lstrip("\\/"))
        # We create TabletService here in order to avoid
        # problems with connections and disconnections of the tablet during the life of the application
        return "http://%s/apps/%s" %(self._getTabletService().robotIp(), subPath.replace(os.path.sep, "/"))

    def _getAppName(self):
        import os
        if self.frameManager:
            behaviorPath = os.path.normpath(self.frameManager.getBehaviorPath(self.behaviorId))
            appsFolderFragment = os.path.join("PackageManager", "apps")
            if not (appsFolderFragment in behaviorPath):
                self.logger.error("appsFolderFragment is not in behaviorPath")
            fragment = behaviorPath.split(appsFolderFragment, 1)[1]
            fragment = fragment.split('/')[1]
            return fragment.lstrip("\\/")
        else:
            self.logger.warning("No ALFrameManager")

    def _getTabletService(self):
        tabletService = None
        try:
            tabletService = self.session().service("ALTabletService")
        except Exception as e:
            self.logger.error(e)
        return tabletService

    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="ボックスBehaviorの終了時に信号を送る。" id="4" />
                            <Parameter name="html" inherits_from_parent="0" content_type="3" value="reseach.html" default_value="" custom_choice="0" tooltip="" id="5" />
                        </Box>
                        <Box name="Wait" id="6" localization="8" tooltip="Wait a moment before sending a signal on the output. &#x0A;Can be stopped anytime. &#x0A;Stimulating the input again before output is activated restarts the waiting period.&#x0A;" x="102" y="118">
                            <bitmap>media/images/box/wait.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.waiting = None

    def onUnload(self):
        self.cancelWaiting()

    def triggerOutput(self):
        self.timerOutput()

    def cancelWaiting(self):
        if self.waiting:
            self.waiting.cancel()
        self.waiting = None

    def onInput_onStart(self):
        self.cancelWaiting()
        import qi
        self.waiting = qi.async(self.triggerOutput, delay=int(self.getParameter("Timeout (s)") * 1000 * 1000))

    def onInput_onStop(self):
        if self.getParameter("Trigger timerOutput if cancelled") and self.waiting and self.waiting.isRunning():
            self.timerOutput()
        self.onUnload()]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" />
                            <Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is elapsed, or if the box is stopped and the appropriate parameter is set." id="4" />
                            <Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="0.1" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" />
                            <Parameter name="Trigger timerOutput if cancelled" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If the box is currently waiting and cancelled, output will be stimulated." id="6" />
                        </Box>
                        <Box name="Wait (1)" id="1" localization="8" tooltip="Wait a moment before sending a signal on the output. &#x0A;Can be stopped anytime. &#x0A;Stimulating the input again before output is activated restarts the waiting period.&#x0A;" x="387" y="172">
                            <bitmap>media/images/box/wait.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.waiting = None

    def onUnload(self):
        self.cancelWaiting()

    def triggerOutput(self):
        self.timerOutput()

    def cancelWaiting(self):
        if self.waiting:
            self.waiting.cancel()
        self.waiting = None

    def onInput_onStart(self):
        self.cancelWaiting()
        import qi
        self.waiting = qi.async(self.triggerOutput, delay=int(self.getParameter("Timeout (s)") * 1000 * 1000))

    def onInput_onStop(self):
        if self.getParameter("Trigger timerOutput if cancelled") and self.waiting and self.waiting.isRunning():
            self.timerOutput()
        self.onUnload()]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" />
                            <Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is elapsed, or if the box is stopped and the appropriate parameter is set." id="4" />
                            <Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="2" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" />
                            <Parameter name="Trigger timerOutput if cancelled" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If the box is currently waiting and cancelled, output will be stimulated." id="6" />
                        </Box>
                        <Box name="Run Behavior" id="30" localization="0" tooltip="Manage a behavior.&#x0A;&#x0A;Will start the behavior given as input when onStart is stimulated.&#x0A;&#x0A;Will stop it when onStop is stimulated.&#x0A;&#x0A;Will exit on onStopped when no error happened during behavior startup or stopping.&#x0A;&#x0A;Will exit on onError if an error happened, transmitting a string describing the error.&#x0A;&#x0A;Most notably (but not exclusively), the box will fail if you try to start a behavior not present on the robot, or if you try to start a behavior that&apos;s already started.&#x0A;" x="522" y="322">
                            <bitmap>media/images/box/box-diagram.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.behaviorName = str()
        self.bm = ALProxy("ALBehaviorManager")

    def onUnload(self):
        if len(self.behaviorName) > 0:
            self.bm.stopBehavior(self.behaviorName)

    def onInput_onStart(self, p):
        if len(self.behaviorName) > 0 and self.behaviorName != p:
            raise RuntimeError("this box is already running another behavior")

        try:
            self.behaviorName = p
            self.bm.runBehavior(self.behaviorName)
        finally:
            self.behaviorName = str()
            self.onStopped()

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                            <Output name="onError" type="3" type_size="1" nature="1" inner="0" tooltip="" id="5" />
                        </Box>
                        <Box name="Text Edit" id="31" localization="8" tooltip="Send the text you entered when the input is stimulated." plugin="textedit_plugin" x="204" y="328">
                            <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped(".lastUploadedChoregrapheBehavior/1-5")]]>
</content>
                            </script>
                            <pluginContent>
                                <text>
                                    <![CDATA[.lastUploadedChoregrapheBehavior/1-5]]>
</text>
                            </pluginContent>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the text on the output." id="2" />
                            <Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The text you entered." id="3" />
                        </Box>
                        <Link inputowner="14" indexofinput="2" outputowner="6" indexofoutput="4" />
                        <Link inputowner="18" indexofinput="2" outputowner="6" indexofoutput="4" />
                        <Link inputowner="1" indexofinput="2" outputowner="18" indexofoutput="4" />
                        <Link inputowner="230" indexofinput="2" outputowner="1" indexofoutput="4" />
                        <Link inputowner="6" indexofinput="2" outputowner="0" indexofoutput="2" />
                        <Link inputowner="30" indexofinput="2" outputowner="31" indexofoutput="3" />
                        <Link inputowner="31" indexofinput="2" outputowner="230" indexofoutput="4" />
                    </Diagram>
                </BehaviorKeyframe>
            </BehaviorLayer>
        </Timeline>
    </Box>
</ChoregrapheProject>
